# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  python.buildVersion: '3.7'

  major: 1
  minor: $[counter(variables.major, 0)]
  buildVersion: $[format('{0}.{1}', variables.major, variables.minor)]

name: '$(buildVersion)'

jobs:
  - job: Test
    strategy:
      matrix:
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'

  - job: Build
    dependsOn: Test

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.buildVersion)'
      displayName: 'Use Python $(python.buildVersion)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        python setup.py sdist
      displayName: 'Artifact creation'

    - script: |
        pip install twine
      displayName: 'Install twine'

    - task: TwineAuthenticate@1
      inputs:
        pythonUploadServiceConnection: 'PyPI'

    - script: |
        twine upload --config-file $(PYPIRC_PATH) $(BUILD_SOURCESDIRECTORY)/dist/*
      displayName: 'Upload package'
